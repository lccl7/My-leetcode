class Solution {
public:
    int longestValidParentheses(string s) {
        int n = s.length();
        if(n <= 1) return 0;
        
        stack<char> schar;
        int start = 0;
        int sum = 0;
        for(int i = 0; i < n; ++i)
        {
            if(s[i] == '(')
            {
                schar.push(start);
                start = 0;
            }
            else if (!schar.empty()) {
start += (1 + schar.top());
schar.pop();
sum = max(sum, start);
} else {
start = 0;
}
}
return sum * 2;
    }
};
